//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Entity Developer tool using EF Core template.
// Code is generated on: 13/4/2024 12:33 p. m.
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

#nullable disable

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Common;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;
using System.Threading.Tasks;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Internal;
using Microsoft.EntityFrameworkCore.Metadata;

namespace SistemaOro.Data.Entities
{

    public partial class DataContext : DbContext
    {

        public DataContext() :
            base()
        {
            OnCreated();
        }

        public DataContext(DbContextOptions<DataContext> options) :
            base(options)
        {
            OnCreated();
        }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured ||
                (!optionsBuilder.Options.Extensions.OfType<RelationalOptionsExtension>().Any(ext => !string.IsNullOrEmpty(ext.ConnectionString) || ext.Connection != null) &&
                 !optionsBuilder.Options.Extensions.Any(ext => !(ext is RelationalOptionsExtension) && !(ext is CoreOptionsExtension))))
            {
                optionsBuilder.UseSqlServer(@"Data Source=INFORMATICA\SQLEXPRESS;Initial Catalog=EfectiOro;Integrated Security=True;Persist Security Info=True");
            }
            CustomizeConfiguration(ref optionsBuilder);
            base.OnConfiguring(optionsBuilder);
        }

        partial void CustomizeConfiguration(ref DbContextOptionsBuilder optionsBuilder);

        public virtual DbSet<Adelanto> Adelantos
        {
            get;
            set;
        }

        public virtual DbSet<Agencia> Agencias
        {
            get;
            set;
        }

        public virtual DbSet<Caja> Cajas
        {
            get;
            set;
        }

        public virtual DbSet<CierrePrecio> CierrePrecios
        {
            get;
            set;
        }

        public virtual DbSet<Cliente> Clientes
        {
            get;
            set;
        }

        public virtual DbSet<Compra> Compras
        {
            get;
            set;
        }

        public virtual DbSet<ComprasAdelanto> ComprasAdelantos
        {
            get;
            set;
        }

        public virtual DbSet<Descargue> Descargues
        {
            get;
            set;
        }

        public virtual DbSet<DetCompra> DetCompras
        {
            get;
            set;
        }

        public virtual DbSet<Detacaja> Detacajas
        {
            get;
            set;
        }

        public virtual DbSet<Detacierre> Detacierres
        {
            get;
            set;
        }

        public virtual DbSet<Estado> Estados
        {
            get;
            set;
        }

        public virtual DbSet<Id> Id
        {
            get;
            set;
        }

        public virtual DbSet<Liquidacion2015> Liquidacion2015s
        {
            get;
            set;
        }

        public virtual DbSet<Listado> Listados
        {
            get;
            set;
        }

        public virtual DbSet<Mcaja> Mcajas
        {
            get;
            set;
        }

        public virtual DbSet<Moneda> Monedas
        {
            get;
            set;
        }

        public virtual DbSet<Movcaja> Movcajas
        {
            get;
            set;
        }

        public virtual DbSet<PagosAdelantado> PagosAdelantados
        {
            get;
            set;
        }

        public virtual DbSet<Pica> Picas
        {
            get;
            set;
        }

        public virtual DbSet<PrecioKilate> PrecioKilates
        {
            get;
            set;
        }

        public virtual DbSet<Precio> Precios
        {
            get;
            set;
        }

        public virtual DbSet<ReporteCaja> ReporteCajas
        {
            get;
            set;
        }

        public virtual DbSet<Rubro> Rubros
        {
            get;
            set;
        }

        public virtual DbSet<TipoCambio> TipoCambios
        {
            get;
            set;
        }

        public virtual DbSet<TipoPreciosPagado> TipoPreciosPagados
        {
            get;
            set;
        }

        public virtual DbSet<Tmpprecio> Tmpprecios
        {
            get;
            set;
        }

        public virtual DbSet<Usuario> Usuarios
        {
            get;
            set;
        }

        public virtual DbSet<ComprasOperador> ComprasOperadors
        {
            get;
            set;
        }

        public virtual DbSet<DescargueByCompra> DescargueByCompras
        {
            get;
            set;
        }

        public virtual DbSet<MovimientosCajaSelect> MovimientosCajaSelects
        {
            get;
            set;
        }

        public virtual DbSet<RptMovimientosCaja> RptMovimientosCajas
        {
            get;
            set;
        }

        public virtual DbSet<TransaccionEfectivo> TransaccionEfectivos
        {
            get;
            set;
        }

        public virtual DbSet<Vdetacaja> Vdetacajas
        {
            get;
            set;
        }

        public virtual DbSet<VVariacionesCliente> VVariacionesClientes
        {
            get;
            set;
        }

        #region Methods

        public void AnularCompra (string numeroCompra, string agencia)
        {

            DbConnection connection = this.Database.GetDbConnection();
            bool needClose = false;
            if (connection.State != ConnectionState.Open)
            {
                connection.Open();
                needClose = true;
            }

            try
            {
                using (DbCommand cmd = connection.CreateCommand())
                {
                    if (this.Database.GetCommandTimeout().HasValue)
                        cmd.CommandTimeout = this.Database.GetCommandTimeout().Value;
                    cmd.CommandType = CommandType.StoredProcedure;
                    cmd.CommandText = @"dbo.anularCompra";

                    DbParameter numeroCompraParameter = cmd.CreateParameter();
                    numeroCompraParameter.ParameterName = "numeroCompra";
                    numeroCompraParameter.Direction = ParameterDirection.Input;
                    numeroCompraParameter.DbType = DbType.String;
                    numeroCompraParameter.Size = 20;
                    if (numeroCompra != null)
                    {
                        numeroCompraParameter.Value = numeroCompra;
                    }
                    else
                    {
                        numeroCompraParameter.Value = DBNull.Value;
                    }
                    cmd.Parameters.Add(numeroCompraParameter);

                    DbParameter agenciaParameter = cmd.CreateParameter();
                    agenciaParameter.ParameterName = "agencia";
                    agenciaParameter.Direction = ParameterDirection.Input;
                    agenciaParameter.DbType = DbType.String;
                    agenciaParameter.Size = 20;
                    if (agencia != null)
                    {
                        agenciaParameter.Value = agencia;
                    }
                    else
                    {
                        agenciaParameter.Value = DBNull.Value;
                    }
                    cmd.Parameters.Add(agenciaParameter);
                    cmd.ExecuteNonQuery();
                }
            }
            finally
            {
                if (needClose)
                    connection.Close();
            }
        }

        public async Task AnularCompraAsync (string numeroCompra, string agencia)
        {

            DbConnection connection = this.Database.GetDbConnection();
            bool needClose = false;
            if (connection.State != ConnectionState.Open)
            {
                await connection.OpenAsync();
                needClose = true;
            }

            try
            {
                using (DbCommand cmd = connection.CreateCommand())
                {
                    if (this.Database.GetCommandTimeout().HasValue)
                        cmd.CommandTimeout = this.Database.GetCommandTimeout().Value;
                    cmd.CommandType = CommandType.StoredProcedure;
                    cmd.CommandText = @"dbo.anularCompra";

                    DbParameter numeroCompraParameter = cmd.CreateParameter();
                    numeroCompraParameter.ParameterName = "numeroCompra";
                    numeroCompraParameter.Direction = ParameterDirection.Input;
                    numeroCompraParameter.DbType = DbType.String;
                    numeroCompraParameter.Size = 20;
                    if (numeroCompra != null)
                    {
                        numeroCompraParameter.Value = numeroCompra;
                    }
                    else
                    {
                        numeroCompraParameter.Value = DBNull.Value;
                    }
                    cmd.Parameters.Add(numeroCompraParameter);

                    DbParameter agenciaParameter = cmd.CreateParameter();
                    agenciaParameter.ParameterName = "agencia";
                    agenciaParameter.Direction = ParameterDirection.Input;
                    agenciaParameter.DbType = DbType.String;
                    agenciaParameter.Size = 20;
                    if (agencia != null)
                    {
                        agenciaParameter.Value = agencia;
                    }
                    else
                    {
                        agenciaParameter.Value = DBNull.Value;
                    }
                    cmd.Parameters.Add(agenciaParameter);
                    await cmd.ExecuteNonQueryAsync();
                }
            }
            finally
            {
                if (needClose)
                    connection.Close();
            }
        }

        #endregion

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            base.OnModelCreating(modelBuilder);

            this.AdelantoMapping(modelBuilder);
            this.CustomizeAdelantoMapping(modelBuilder);

            this.AgenciaMapping(modelBuilder);
            this.CustomizeAgenciaMapping(modelBuilder);

            this.CajaMapping(modelBuilder);
            this.CustomizeCajaMapping(modelBuilder);

            this.CierrePrecioMapping(modelBuilder);
            this.CustomizeCierrePrecioMapping(modelBuilder);

            this.ClienteMapping(modelBuilder);
            this.CustomizeClienteMapping(modelBuilder);

            this.CompraMapping(modelBuilder);
            this.CustomizeCompraMapping(modelBuilder);

            this.ComprasAdelantoMapping(modelBuilder);
            this.CustomizeComprasAdelantoMapping(modelBuilder);

            this.DescargueMapping(modelBuilder);
            this.CustomizeDescargueMapping(modelBuilder);

            this.DetCompraMapping(modelBuilder);
            this.CustomizeDetCompraMapping(modelBuilder);

            this.DetacajaMapping(modelBuilder);
            this.CustomizeDetacajaMapping(modelBuilder);

            this.DetacierreMapping(modelBuilder);
            this.CustomizeDetacierreMapping(modelBuilder);

            this.EstadoMapping(modelBuilder);
            this.CustomizeEstadoMapping(modelBuilder);

            this.IdMapping(modelBuilder);
            this.CustomizeIdMapping(modelBuilder);

            this.Liquidacion2015Mapping(modelBuilder);
            this.CustomizeLiquidacion2015Mapping(modelBuilder);

            this.ListadoMapping(modelBuilder);
            this.CustomizeListadoMapping(modelBuilder);

            this.McajaMapping(modelBuilder);
            this.CustomizeMcajaMapping(modelBuilder);

            this.MonedaMapping(modelBuilder);
            this.CustomizeMonedaMapping(modelBuilder);

            this.MovcajaMapping(modelBuilder);
            this.CustomizeMovcajaMapping(modelBuilder);

            this.PagosAdelantadoMapping(modelBuilder);
            this.CustomizePagosAdelantadoMapping(modelBuilder);

            this.PicaMapping(modelBuilder);
            this.CustomizePicaMapping(modelBuilder);

            this.PrecioKilateMapping(modelBuilder);
            this.CustomizePrecioKilateMapping(modelBuilder);

            this.PrecioMapping(modelBuilder);
            this.CustomizePrecioMapping(modelBuilder);

            this.ReporteCajaMapping(modelBuilder);
            this.CustomizeReporteCajaMapping(modelBuilder);

            this.RubroMapping(modelBuilder);
            this.CustomizeRubroMapping(modelBuilder);

            this.TipoCambioMapping(modelBuilder);
            this.CustomizeTipoCambioMapping(modelBuilder);

            this.TipoPreciosPagadoMapping(modelBuilder);
            this.CustomizeTipoPreciosPagadoMapping(modelBuilder);

            this.TmpprecioMapping(modelBuilder);
            this.CustomizeTmpprecioMapping(modelBuilder);

            this.UsuarioMapping(modelBuilder);
            this.CustomizeUsuarioMapping(modelBuilder);

            this.ComprasOperadorMapping(modelBuilder);
            this.CustomizeComprasOperadorMapping(modelBuilder);

            this.DescargueByCompraMapping(modelBuilder);
            this.CustomizeDescargueByCompraMapping(modelBuilder);

            this.MovimientosCajaSelectMapping(modelBuilder);
            this.CustomizeMovimientosCajaSelectMapping(modelBuilder);

            this.RptMovimientosCajaMapping(modelBuilder);
            this.CustomizeRptMovimientosCajaMapping(modelBuilder);

            this.TransaccionEfectivoMapping(modelBuilder);
            this.CustomizeTransaccionEfectivoMapping(modelBuilder);

            this.VdetacajaMapping(modelBuilder);
            this.CustomizeVdetacajaMapping(modelBuilder);

            this.VVariacionesClienteMapping(modelBuilder);
            this.CustomizeVVariacionesClienteMapping(modelBuilder);

            RelationshipsMapping(modelBuilder);
            CustomizeMapping(ref modelBuilder);
        }

        #region Adelanto Mapping

        private void AdelantoMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Adelanto>().ToTable(@"adelantos", @"dbo");
            modelBuilder.Entity<Adelanto>().Property(x => x.Idsalida).HasColumnName(@"idsalida").HasColumnType(@"varchar(20)").IsRequired().ValueGeneratedNever().HasMaxLength(20);
            modelBuilder.Entity<Adelanto>().Property(x => x.Codcliente).HasColumnName(@"codcliente").HasColumnType(@"varchar(20)").IsRequired().ValueGeneratedNever().HasMaxLength(20);
            modelBuilder.Entity<Adelanto>().Property(x => x.Numcompra).HasColumnName(@"numcompra").HasColumnType(@"varchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Adelanto>().Property(x => x.Fecha).HasColumnName(@"fecha").HasColumnType(@"date").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<Adelanto>().Property(x => x.Monto).HasColumnName(@"monto").HasColumnType(@"numeric(18,2)").ValueGeneratedNever().HasPrecision(18, 2);
            modelBuilder.Entity<Adelanto>().Property(x => x.Saldo).HasColumnName(@"saldo").HasColumnType(@"numeric(18,2)").IsRequired().ValueGeneratedNever().HasPrecision(18, 2);
            modelBuilder.Entity<Adelanto>().Property(x => x.Efectivo).HasColumnName(@"efectivo").HasColumnType(@"numeric(18,2)").ValueGeneratedNever().HasPrecision(18, 2);
            modelBuilder.Entity<Adelanto>().Property(x => x.Cheque).HasColumnName(@"cheque").HasColumnType(@"numeric(18,2)").ValueGeneratedNever().HasPrecision(18, 2);
            modelBuilder.Entity<Adelanto>().Property(x => x.Transferencia).HasColumnName(@"transferencia").HasColumnType(@"numeric(18,2)").ValueGeneratedNever().HasPrecision(18, 2);
            modelBuilder.Entity<Adelanto>().Property(x => x.Codcaja).HasColumnName(@"codcaja").HasColumnType(@"varchar(10)").ValueGeneratedNever().HasMaxLength(10);
            modelBuilder.Entity<Adelanto>().Property(x => x.Usuario).HasColumnName(@"usuario").HasColumnType(@"varchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Adelanto>().Property(x => x.MontoLetras).HasColumnName(@"monto_letras").HasColumnType(@"varchar(max)").ValueGeneratedNever();
            modelBuilder.Entity<Adelanto>().Property(x => x.Hora).HasColumnName(@"hora").HasColumnType(@"varchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Adelanto>().Property(x => x.Codmoneda).HasColumnName(@"codmoneda").HasColumnType(@"int").ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<Adelanto>().HasKey(@"Idsalida");
        }

        partial void CustomizeAdelantoMapping(ModelBuilder modelBuilder);

        #endregion

        #region Agencia Mapping

        private void AgenciaMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Agencia>().ToTable(@"Agencia", @"dbo");
            modelBuilder.Entity<Agencia>().Property(x => x.Codagencia).HasColumnName(@"codagencia").HasColumnType(@"varchar(10)").IsRequired().ValueGeneratedNever().HasMaxLength(10);
            modelBuilder.Entity<Agencia>().Property(x => x.Nomagencia).HasColumnName(@"nomagencia").HasColumnType(@"varchar(150)").IsRequired().ValueGeneratedNever().HasMaxLength(150);
            modelBuilder.Entity<Agencia>().Property(x => x.Diragencia).HasColumnName(@"diragencia").HasColumnType(@"varchar(max)").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<Agencia>().Property(x => x.Disagencia).HasColumnName(@"disagencia").HasColumnType(@"varchar(100)").IsRequired().ValueGeneratedNever().HasMaxLength(100);
            modelBuilder.Entity<Agencia>().Property(x => x.Telagencia).HasColumnName(@"telagencia").HasColumnType(@"varchar(20)").IsRequired().ValueGeneratedNever().HasMaxLength(20);
            modelBuilder.Entity<Agencia>().Property(x => x.Numcompra).HasColumnName(@"numcompra").HasColumnType(@"int").ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<Agencia>().HasKey(@"Codagencia");
        }

        partial void CustomizeAgenciaMapping(ModelBuilder modelBuilder);

        #endregion

        #region Caja Mapping

        private void CajaMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Caja>().ToTable(@"caja", @"dbo");
            modelBuilder.Entity<Caja>().Property(x => x.Codcaja).HasColumnName(@"codcaja").HasColumnType(@"varchar(10)").IsRequired().ValueGeneratedNever().HasMaxLength(10);
            modelBuilder.Entity<Caja>().Property(x => x.Descripcion).HasColumnName(@"descripcion").HasColumnType(@"varchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Caja>().HasKey(@"Codcaja");
        }

        partial void CustomizeCajaMapping(ModelBuilder modelBuilder);

        #endregion

        #region CierrePrecio Mapping

        private void CierrePrecioMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<CierrePrecio>().ToTable(@"cierre_precios", @"dbo");
            modelBuilder.Entity<CierrePrecio>().Property(x => x.Codcierre).HasColumnName(@"codcierre").HasColumnType(@"int").IsRequired().ValueGeneratedOnAdd().HasPrecision(10, 0);
            modelBuilder.Entity<CierrePrecio>().Property(x => x.Codcliente).HasColumnName(@"codcliente").HasColumnType(@"varchar(20)").IsRequired().ValueGeneratedNever().HasMaxLength(20);
            modelBuilder.Entity<CierrePrecio>().Property(x => x.Status).HasColumnName(@"status").HasColumnType(@"bit").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<CierrePrecio>().Property(x => x.OnzasFinas).HasColumnName(@"onzas_finas").HasColumnType(@"decimal(12,3)").IsRequired().ValueGeneratedNever().HasPrecision(12, 3);
            modelBuilder.Entity<CierrePrecio>().Property(x => x.GramosFinos).HasColumnName(@"gramos_finos").HasColumnType(@"decimal(12,2)").IsRequired().ValueGeneratedNever().HasPrecision(12, 2);
            modelBuilder.Entity<CierrePrecio>().Property(x => x.PrecioOro).HasColumnName(@"precio_oro").HasColumnType(@"decimal(12,2)").IsRequired().ValueGeneratedNever().HasPrecision(12, 2);
            modelBuilder.Entity<CierrePrecio>().Property(x => x.PrecioBase).HasColumnName(@"precio_base").HasColumnType(@"decimal(12,2)").IsRequired().ValueGeneratedNever().HasPrecision(12, 2);
            modelBuilder.Entity<CierrePrecio>().Property(x => x.SaldoOnzas).HasColumnName(@"saldo_onzas").HasColumnType(@"decimal(12,3)").IsRequired().ValueGeneratedNever().HasPrecision(12, 3);
            modelBuilder.Entity<CierrePrecio>().Property(x => x.Fecha).HasColumnName(@"fecha").HasColumnType(@"datetime").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<CierrePrecio>().Property(x => x.Margen).HasColumnName(@"margen").HasColumnType(@"decimal(12,2)").IsRequired().ValueGeneratedNever().HasPrecision(12, 2);
            modelBuilder.Entity<CierrePrecio>().HasKey(@"Codcierre");
        }

        partial void CustomizeCierrePrecioMapping(ModelBuilder modelBuilder);

        #endregion

        #region Cliente Mapping

        private void ClienteMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Cliente>().ToTable(@"Cliente", @"dbo");
            modelBuilder.Entity<Cliente>().Property(x => x.Codcliente).HasColumnName(@"codcliente").HasColumnType(@"varchar(20)").IsRequired().ValueGeneratedNever().HasMaxLength(20);
            modelBuilder.Entity<Cliente>().Property(x => x.Nombres).HasColumnName(@"nombres").HasColumnType(@"varchar(35)").IsRequired().ValueGeneratedNever().HasMaxLength(35);
            modelBuilder.Entity<Cliente>().Property(x => x.Apellidos).HasColumnName(@"apellidos").HasColumnType(@"varchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Cliente>().Property(x => x.Numcedula).HasColumnName(@"numcedula").HasColumnType(@"varchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Cliente>().Property(x => x.FEmision).HasColumnName(@"f_emision").HasColumnType(@"date").ValueGeneratedNever();
            modelBuilder.Entity<Cliente>().Property(x => x.FVencimiento).HasColumnName(@"f_vencimiento").HasColumnType(@"date").ValueGeneratedNever();
            modelBuilder.Entity<Cliente>().Property(x => x.Direccion).HasColumnName(@"direccion").HasColumnType(@"text").IsRequired().ValueGeneratedNever().HasMaxLength(2147483647);
            modelBuilder.Entity<Cliente>().Property(x => x.FNacimiento).HasColumnName(@"f_nacimiento").HasColumnType(@"date").ValueGeneratedNever();
            modelBuilder.Entity<Cliente>().Property(x => x.Estadocivil).HasColumnName(@"estadocivil").HasColumnType(@"varchar(20)").ValueGeneratedNever().HasMaxLength(20);
            modelBuilder.Entity<Cliente>().Property(x => x.Ciudad).HasColumnName(@"ciudad").HasColumnType(@"varchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Cliente>().Property(x => x.Telefono).HasColumnName(@"telefono").HasColumnType(@"varchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Cliente>().Property(x => x.Celular).HasColumnName(@"celular").HasColumnType(@"varchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Cliente>().Property(x => x.Email).HasColumnName(@"email").HasColumnType(@"varchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Cliente>().Property(x => x.FIngreso).HasColumnName(@"f_ingreso").HasColumnType(@"date").ValueGeneratedNever();
            modelBuilder.Entity<Cliente>().Property(x => x.Ocupacion).HasColumnName(@"ocupacion").HasColumnType(@"varchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Cliente>().Property(x => x.DireccionNegocio).HasColumnName(@"direccion_negocio").HasColumnType(@"text").ValueGeneratedNever().HasMaxLength(2147483647);
            modelBuilder.Entity<Cliente>().Property(x => x.TiempoNeg).HasColumnName(@"tiempo_neg").HasColumnType(@"varchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Cliente>().Property(x => x.OtraAe).HasColumnName(@"otra_ae").HasColumnType(@"varchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Cliente>().Property(x => x.DescOtra).HasColumnName(@"desc_otra").HasColumnType(@"text").ValueGeneratedNever().HasMaxLength(2147483647);
            modelBuilder.Entity<Cliente>().Property(x => x.NomCuenta).HasColumnName(@"nom_cuenta").HasColumnType(@"varchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Cliente>().Property(x => x.NumCuenta).HasColumnName(@"num_cuenta").HasColumnType(@"varchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Cliente>().Property(x => x.NomBanco).HasColumnName(@"nom_banco").HasColumnType(@"varchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Cliente>().Property(x => x.MontoMensual).HasColumnName(@"monto_mensual").HasColumnType(@"money").ValueGeneratedNever().HasPrecision(19, 4);
            modelBuilder.Entity<Cliente>().Property(x => x.TotalOperaciones).HasColumnName(@"total_operaciones").HasColumnType(@"numeric(12,3)").ValueGeneratedNever().HasPrecision(12, 3);
            modelBuilder.Entity<Cliente>().Property(x => x.ActuaPor).HasColumnName(@"actua_por").HasColumnType(@"varchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Cliente>().Property(x => x.NombreTercero).HasColumnName(@"nombre_tercero").HasColumnType(@"varchar(100)").ValueGeneratedNever().HasMaxLength(100);
            modelBuilder.Entity<Cliente>().Property(x => x.DireccionTercero).HasColumnName(@"direccion_tercero").HasColumnType(@"text").ValueGeneratedNever().HasMaxLength(2147483647);
            modelBuilder.Entity<Cliente>().Property(x => x.Pica).HasColumnName(@"pica").HasColumnType(@"int").ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<Cliente>().Property(x => x.Ocupacion2).HasColumnName(@"ocupacion2").HasColumnType(@"varchar(50)").ValueGeneratedNever().HasMaxLength(50).HasDefaultValueSql(@"'Vendedor'");
            modelBuilder.Entity<Cliente>().Property(x => x.Numcompra).HasColumnName(@"Numcompra").HasColumnType(@"varchar(20)").ValueGeneratedNever().HasMaxLength(20);
            modelBuilder.Entity<Cliente>().HasKey(@"Codcliente");
        }

        partial void CustomizeClienteMapping(ModelBuilder modelBuilder);

        #endregion

        #region Compra Mapping

        private void CompraMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Compra>().ToTable(@"compras", @"dbo");
            modelBuilder.Entity<Compra>().Property(x => x.Numcompra).HasColumnName(@"numcompra").HasColumnType(@"varchar(20)").IsRequired().ValueGeneratedNever().HasMaxLength(20);
            modelBuilder.Entity<Compra>().Property(x => x.Codagencia).HasColumnName(@"codagencia").HasColumnType(@"varchar(10)").IsRequired().ValueGeneratedNever().HasMaxLength(10);
            modelBuilder.Entity<Compra>().Property(x => x.Codcliente).HasColumnName(@"codcliente").HasColumnType(@"varchar(20)").IsRequired().ValueGeneratedNever().HasMaxLength(20);
            modelBuilder.Entity<Compra>().Property(x => x.Codcaja).HasColumnName(@"codcaja").HasColumnType(@"varchar(10)").IsRequired().ValueGeneratedNever().HasMaxLength(10);
            modelBuilder.Entity<Compra>().Property(x => x.Peso).HasColumnName(@"peso").HasColumnType(@"decimal(11,2)").IsRequired().ValueGeneratedNever().HasPrecision(11, 2);
            modelBuilder.Entity<Compra>().Property(x => x.Codmoneda).HasColumnName(@"codmoneda").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<Compra>().Property(x => x.Total).HasColumnName(@"total").HasColumnType(@"decimal(15,2)").IsRequired().ValueGeneratedNever().HasPrecision(15, 2);
            modelBuilder.Entity<Compra>().Property(x => x.Fecha).HasColumnName(@"fecha").HasColumnType(@"date").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<Compra>().Property(x => x.Codestado).HasColumnName(@"codestado").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<Compra>().Property(x => x.Usuario).HasColumnName(@"usuario").HasColumnType(@"varchar(20)").IsRequired().ValueGeneratedNever().HasMaxLength(20);
            modelBuilder.Entity<Compra>().Property(x => x.Hora).HasColumnName(@"hora").HasColumnType(@"varchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Compra>().Property(x => x.FormaPago).HasColumnName(@"forma_pago").HasColumnType(@"varchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Compra>().Property(x => x.Dgnumdes).HasColumnName(@"dgnumdes").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<Compra>().Property(x => x.Efectivo).HasColumnName(@"efectivo").HasColumnType(@"numeric(18,2)").IsRequired().ValueGeneratedNever().HasPrecision(18, 2);
            modelBuilder.Entity<Compra>().Property(x => x.Cheque).HasColumnName(@"cheque").HasColumnType(@"numeric(18,2)").IsRequired().ValueGeneratedNever().HasPrecision(18, 2);
            modelBuilder.Entity<Compra>().Property(x => x.Transferencia).HasColumnName(@"transferencia").HasColumnType(@"numeric(18,2)").IsRequired().ValueGeneratedNever().HasPrecision(18, 2);
            modelBuilder.Entity<Compra>().Property(x => x.PorCobrar).HasColumnName(@"por_cobrar").HasColumnType(@"numeric(18,2)").IsRequired().ValueGeneratedNever().HasPrecision(18, 2);
            modelBuilder.Entity<Compra>().Property(x => x.PorPagar).HasColumnName(@"por_pagar").HasColumnType(@"numeric(18,2)").IsRequired().ValueGeneratedNever().HasPrecision(18, 2);
            modelBuilder.Entity<Compra>().Property(x => x.Adelantos).HasColumnName(@"adelantos").HasColumnType(@"numeric(18,2)").IsRequired().ValueGeneratedNever().HasPrecision(18, 2);
            modelBuilder.Entity<Compra>().Property(x => x.SaldoPorPagar).HasColumnName(@"saldo_por_pagar").HasColumnType(@"numeric(18,2)").IsRequired().ValueGeneratedNever().HasPrecision(18, 2);
            modelBuilder.Entity<Compra>().Property(x => x.SaldoAdelanto).HasColumnName(@"saldo_adelanto").HasColumnType(@"numeric(12,3)").ValueGeneratedNever().HasPrecision(12, 3).HasDefaultValueSql(@"0");
            modelBuilder.Entity<Compra>().Property(x => x.SaldoAdelantoDolares).HasColumnName(@"saldo_adelanto_dolares").HasColumnType(@"numeric(12,3)").ValueGeneratedNever().HasPrecision(12, 3);
            modelBuilder.Entity<Compra>().HasKey(@"Numcompra");
        }

        partial void CustomizeCompraMapping(ModelBuilder modelBuilder);

        #endregion

        #region ComprasAdelanto Mapping

        private void ComprasAdelantoMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<ComprasAdelanto>().ToTable(@"compras_adelantos", @"dbo");
            modelBuilder.Entity<ComprasAdelanto>().Property(x => x.IdcomprasAdelantos).HasColumnName(@"idcompras_adelantos").HasColumnType(@"int").IsRequired().ValueGeneratedOnAdd().HasPrecision(10, 0);
            modelBuilder.Entity<ComprasAdelanto>().Property(x => x.Numcompra).HasColumnName(@"numcompra").HasColumnType(@"varchar(20)").IsRequired().ValueGeneratedNever().HasMaxLength(20);
            modelBuilder.Entity<ComprasAdelanto>().Property(x => x.Idadelanto).HasColumnName(@"idadelanto").HasColumnType(@"varchar(20)").IsRequired().ValueGeneratedNever().HasMaxLength(20);
            modelBuilder.Entity<ComprasAdelanto>().Property(x => x.Codcliente).HasColumnName(@"codcliente").HasColumnType(@"varchar(20)").ValueGeneratedNever().HasMaxLength(20);
            modelBuilder.Entity<ComprasAdelanto>().Property(x => x.Sinicial).HasColumnName(@"sinicial").HasColumnType(@"numeric(18,2)").IsRequired().ValueGeneratedNever().HasPrecision(18, 2);
            modelBuilder.Entity<ComprasAdelanto>().Property(x => x.Monto).HasColumnName(@"monto").HasColumnType(@"decimal(18,3)").IsRequired().ValueGeneratedNever().HasPrecision(18, 3);
            modelBuilder.Entity<ComprasAdelanto>().Property(x => x.Sfinal).HasColumnName(@"sfinal").HasColumnType(@"numeric(18,2)").IsRequired().ValueGeneratedNever().HasPrecision(18, 2);
            modelBuilder.Entity<ComprasAdelanto>().Property(x => x.Fecha).HasColumnName(@"fecha").HasColumnType(@"date").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<ComprasAdelanto>().Property(x => x.Codcaja).HasColumnName(@"codcaja").HasColumnType(@"varchar(10)").IsRequired().ValueGeneratedNever().HasMaxLength(10);
            modelBuilder.Entity<ComprasAdelanto>().Property(x => x.Usuario).HasColumnName(@"usuario").HasColumnType(@"varchar(20)").IsRequired().ValueGeneratedNever().HasMaxLength(20);
            modelBuilder.Entity<ComprasAdelanto>().Property(x => x.Hora).HasColumnName(@"hora").HasColumnType(@"time").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<ComprasAdelanto>().Property(x => x.Codagencia).HasColumnName(@"codagencia").HasColumnType(@"varchar(10)").ValueGeneratedNever().HasMaxLength(10);
            modelBuilder.Entity<ComprasAdelanto>().Property(x => x.Codmoneda).HasColumnName(@"codmoneda").HasColumnType(@"int").ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<ComprasAdelanto>().HasKey(@"IdcomprasAdelantos");
        }

        partial void CustomizeComprasAdelantoMapping(ModelBuilder modelBuilder);

        #endregion

        #region Descargue Mapping

        private void DescargueMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Descargue>().ToTable(@"descargues", @"dbo");
            modelBuilder.Entity<Descargue>().Property(x => x.Dgcodage).HasColumnName(@"dgcodage").HasColumnType(@"int").IsRequired().ValueGeneratedOnAdd().HasPrecision(10, 0);
            modelBuilder.Entity<Descargue>().Property(x => x.Dgcodcaj).HasColumnName(@"dgcodcaj").HasColumnType(@"varchar(20)").IsRequired().ValueGeneratedNever().HasMaxLength(20);
            modelBuilder.Entity<Descargue>().Property(x => x.Dgusuari).HasColumnName(@"dgusuari").HasColumnType(@"varchar(20)").IsRequired().ValueGeneratedNever().HasMaxLength(20);
            modelBuilder.Entity<Descargue>().Property(x => x.Dgnumdes).HasColumnName(@"dgnumdes").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<Descargue>().Property(x => x.Dgcancom).HasColumnName(@"dgcancom").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<Descargue>().Property(x => x.Dgpesbrt).HasColumnName(@"dgpesbrt").HasColumnType(@"decimal(11,2)").IsRequired().ValueGeneratedNever().HasPrecision(11, 2);
            modelBuilder.Entity<Descargue>().Property(x => x.Dgpesntt).HasColumnName(@"dgpesntt").HasColumnType(@"decimal(11,2)").IsRequired().ValueGeneratedNever().HasPrecision(11, 2);
            modelBuilder.Entity<Descargue>().Property(x => x.Dgimptcom).HasColumnName(@"dgimptcom").HasColumnType(@"decimal(11,2)").IsRequired().ValueGeneratedNever().HasPrecision(11, 2);
            modelBuilder.Entity<Descargue>().Property(x => x.Dgfecdes).HasColumnName(@"dgfecdes").HasColumnType(@"date").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<Descargue>().Property(x => x.Dgfecgen).HasColumnName(@"dgfecgen").HasColumnType(@"date").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<Descargue>().HasKey(@"Dgcodage");
        }

        partial void CustomizeDescargueMapping(ModelBuilder modelBuilder);

        #endregion

        #region DetCompra Mapping

        private void DetCompraMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<DetCompra>().ToTable(@"det_compra", @"dbo");
            modelBuilder.Entity<DetCompra>().Property(x => x.Iddetacompra).HasColumnName(@"iddetacompra").HasColumnType(@"int").IsRequired().ValueGeneratedOnAdd().HasPrecision(10, 0);
            modelBuilder.Entity<DetCompra>().Property(x => x.Numcompra).HasColumnName(@"numcompra").HasColumnType(@"varchar(20)").IsRequired().ValueGeneratedNever().HasMaxLength(20);
            modelBuilder.Entity<DetCompra>().Property(x => x.Linea).HasColumnName(@"linea").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<DetCompra>().Property(x => x.Descripcion).HasColumnName(@"descripcion").HasColumnType(@"varchar(30)").IsRequired().ValueGeneratedNever().HasMaxLength(30);
            modelBuilder.Entity<DetCompra>().Property(x => x.Kilate).HasColumnName(@"kilate").HasColumnType(@"varchar(20)").IsRequired().ValueGeneratedNever().HasMaxLength(20);
            modelBuilder.Entity<DetCompra>().Property(x => x.Preciok).HasColumnName(@"preciok").HasColumnType(@"numeric(18,2)").IsRequired().ValueGeneratedNever().HasPrecision(18, 2);
            modelBuilder.Entity<DetCompra>().Property(x => x.Peso).HasColumnName(@"peso").HasColumnType(@"numeric(18,2)").IsRequired().ValueGeneratedNever().HasPrecision(18, 2);
            modelBuilder.Entity<DetCompra>().Property(x => x.Importe).HasColumnName(@"importe").HasColumnType(@"numeric(18,2)").ValueGeneratedNever().HasPrecision(18, 2);
            modelBuilder.Entity<DetCompra>().Property(x => x.Kilshowdoc).HasColumnName(@"kilshowdoc").HasColumnType(@"varchar(20)").ValueGeneratedNever().HasMaxLength(20);
            modelBuilder.Entity<DetCompra>().Property(x => x.Numdescargue).HasColumnName(@"numdescargue").HasColumnType(@"int").ValueGeneratedNever().HasPrecision(10, 0).HasDefaultValueSql(@"0");
            modelBuilder.Entity<DetCompra>().Property(x => x.Codagencia).HasColumnName(@"codagencia").HasColumnType(@"varchar(10)").ValueGeneratedNever().HasMaxLength(10);
            modelBuilder.Entity<DetCompra>().Property(x => x.Fecha).HasColumnName(@"fecha").HasColumnType(@"date").ValueGeneratedNever();
            modelBuilder.Entity<DetCompra>().HasKey(@"Iddetacompra");
        }

        partial void CustomizeDetCompraMapping(ModelBuilder modelBuilder);

        #endregion

        #region Detacaja Mapping

        private void DetacajaMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Detacaja>().ToTable(@"detacaja", @"dbo");
            modelBuilder.Entity<Detacaja>().Property(x => x.Idcaja).HasColumnName(@"idcaja").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<Detacaja>().Property(x => x.Fecha).HasColumnName(@"fecha").HasColumnType(@"datetime").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<Detacaja>().Property(x => x.Idmov).HasColumnName(@"idmov").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<Detacaja>().Property(x => x.Hora).HasColumnName(@"hora").HasColumnType(@"varchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Detacaja>().Property(x => x.Concepto).HasColumnName(@"concepto").HasColumnType(@"varchar(250)").ValueGeneratedNever().HasMaxLength(250);
            modelBuilder.Entity<Detacaja>().Property(x => x.Efectivo).HasColumnName(@"efectivo").HasColumnType(@"numeric(18,2)").ValueGeneratedNever().HasPrecision(18, 2);
            modelBuilder.Entity<Detacaja>().Property(x => x.Referencia).HasColumnName(@"referencia").HasColumnType(@"varchar(250)").ValueGeneratedNever().HasMaxLength(250);
            modelBuilder.Entity<Detacaja>().Property(x => x.Cheque).HasColumnName(@"cheque").HasColumnType(@"numeric(18,2)").ValueGeneratedNever().HasPrecision(18, 2);
            modelBuilder.Entity<Detacaja>().Property(x => x.Transferencia).HasColumnName(@"transferencia").HasColumnType(@"numeric(18,2)").ValueGeneratedNever().HasPrecision(18, 2);
            modelBuilder.Entity<Detacaja>().Property(x => x.Codcaja).HasColumnName(@"codcaja").HasColumnType(@"varchar(10)").ValueGeneratedNever().HasMaxLength(10);
            modelBuilder.Entity<Detacaja>().Property(x => x.Tipocambio).HasColumnName(@"tipocambio").HasColumnType(@"numeric(12,4)").ValueGeneratedNever().HasPrecision(12, 4).HasDefaultValueSql(@"1");
            modelBuilder.Entity<Detacaja>().HasKey(@"Idcaja", @"Fecha");
        }

        partial void CustomizeDetacajaMapping(ModelBuilder modelBuilder);

        #endregion

        #region Detacierre Mapping

        private void DetacierreMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Detacierre>().ToTable(@"detacierre", @"dbo");
            modelBuilder.Entity<Detacierre>().Property(x => x.Codcierre).HasColumnName(@"codcierre").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<Detacierre>().Property(x => x.Numcompra).HasColumnName(@"numcompra").HasColumnType(@"varchar(20)").IsRequired().ValueGeneratedNever().HasMaxLength(20);
            modelBuilder.Entity<Detacierre>().Property(x => x.Onzas).HasColumnName(@"onzas").HasColumnType(@"decimal(12,3)").IsRequired().ValueGeneratedNever().HasPrecision(12, 3);
            modelBuilder.Entity<Detacierre>().Property(x => x.Saldo).HasColumnName(@"saldo").HasColumnType(@"decimal(12,3)").IsRequired().ValueGeneratedNever().HasPrecision(12, 3);
            modelBuilder.Entity<Detacierre>().Property(x => x.Fecha).HasColumnName(@"fecha").HasColumnType(@"datetime").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<Detacierre>().Property(x => x.Cantidad).HasColumnName(@"cantidad").HasColumnType(@"decimal(12,3)").IsRequired().ValueGeneratedNever().HasPrecision(12, 3);
            modelBuilder.Entity<Detacierre>().Property(x => x.Codagencia).HasColumnName(@"codagencia").HasColumnType(@"varchar(10)").IsRequired().ValueGeneratedNever().HasMaxLength(10);
            modelBuilder.Entity<Detacierre>().HasKey(@"Codcierre", @"Numcompra");
        }

        partial void CustomizeDetacierreMapping(ModelBuilder modelBuilder);

        #endregion

        #region Estado Mapping

        private void EstadoMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Estado>().ToTable(@"Estado", @"dbo");
            modelBuilder.Entity<Estado>().Property(x => x.Codestado).HasColumnName(@"codestado").HasColumnType(@"int").IsRequired().ValueGeneratedOnAdd().HasPrecision(10, 0);
            modelBuilder.Entity<Estado>().Property(x => x.DescEstado).HasColumnName(@"desc_estado").HasColumnType(@"varchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Estado>().HasKey(@"Codestado");
        }

        partial void CustomizeEstadoMapping(ModelBuilder modelBuilder);

        #endregion

        #region Id Mapping

        private void IdMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Id>().ToTable(@"Ids", @"dbo");
            modelBuilder.Entity<Id>().Property(x => x.Codcliente).HasColumnName(@"codcliente").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<Id>().Property(x => x.Codagencia).HasColumnName(@"codagencia").HasColumnType(@"int").ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<Id>().Property(x => x.Numcompra).HasColumnName(@"numcompra").HasColumnType(@"int").ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<Id>().Property(x => x.Idadelanto).HasColumnName(@"idadelanto").HasColumnType(@"int").ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<Id>().Property(x => x.Idcompras).HasColumnName(@"idcompras").HasColumnType(@"int").ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<Id>().Property(x => x.IdAdelantos).HasColumnName(@"id_adelantos").HasColumnType(@"int").ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<Id>().Property(x => x.SaldoAnterior).HasColumnName(@"saldo_anterior").HasColumnType(@"int").ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<Id>().Property(x => x.CierreCompra).HasColumnName(@"cierre_compra").HasColumnType(@"int").ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<Id>().Property(x => x.PrestamoEgreso).HasColumnName(@"prestamo_egreso").HasColumnType(@"int").ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<Id>().Property(x => x.PrestamoIngreso).HasColumnName(@"prestamo_ingreso").HasColumnType(@"int").ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<Id>().Property(x => x.AnularCompra).HasColumnName(@"anular_compra").HasColumnType(@"int").ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<Id>().Property(x => x.AnularAdelanto).HasColumnName(@"anular_adelanto").HasColumnType(@"int").ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<Id>().Property(x => x.VariasCompras).HasColumnName(@"varias_compras").HasColumnType(@"bit").ValueGeneratedNever();
            modelBuilder.Entity<Id>().Property(x => x.Recibe).HasColumnName(@"recibe").HasColumnType(@"varchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Id>().Property(x => x.PagoAdelanto).HasColumnName(@"pago_adelanto").HasColumnType(@"int").ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<Id>().Property(x => x.Idreserva).HasColumnName(@"idreserva").HasColumnType(@"int").ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<Id>().Property(x => x.Backup).HasColumnName(@"backup").HasColumnType(@"date").ValueGeneratedNever();
            modelBuilder.Entity<Id>().Property(x => x.Cordobas).HasColumnName(@"cordobas").HasColumnType(@"int").ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<Id>().Property(x => x.Dolares).HasColumnName(@"dolares").HasColumnType(@"int").ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<Id>().HasKey(@"Codcliente");
        }

        partial void CustomizeIdMapping(ModelBuilder modelBuilder);

        #endregion

        #region Liquidacion2015 Mapping

        private void Liquidacion2015Mapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Liquidacion2015>().ToTable(@"liquidacion2015", @"dbo");
            modelBuilder.Entity<Liquidacion2015>().Property(x => x.Numcompra).HasColumnName(@"numcompra").HasColumnType(@"nvarchar(255)").IsRequired().ValueGeneratedNever().HasMaxLength(255);
            modelBuilder.Entity<Liquidacion2015>().Property(x => x.Codcliente).HasColumnName(@"codcliente").HasColumnType(@"nvarchar(255)").ValueGeneratedNever().HasMaxLength(255);
            modelBuilder.Entity<Liquidacion2015>().Property(x => x.Codcaja).HasColumnName(@"codcaja").HasColumnType(@"nvarchar(255)").ValueGeneratedNever().HasMaxLength(255);
            modelBuilder.Entity<Liquidacion2015>().Property(x => x.Peso).HasColumnName(@"peso").HasColumnType(@"numeric(18,2)").ValueGeneratedNever().HasPrecision(18, 2);
            modelBuilder.Entity<Liquidacion2015>().Property(x => x.Total).HasColumnName(@"total").HasColumnType(@"numeric(18,2)").ValueGeneratedNever().HasPrecision(18, 2);
            modelBuilder.Entity<Liquidacion2015>().Property(x => x.Fecha).HasColumnName(@"fecha").HasColumnType(@"date").ValueGeneratedNever();
            modelBuilder.Entity<Liquidacion2015>().Property(x => x.Usuario).HasColumnName(@"usuario").HasColumnType(@"nvarchar(255)").ValueGeneratedNever().HasMaxLength(255);
            modelBuilder.Entity<Liquidacion2015>().Property(x => x.Hora).HasColumnName(@"hora").HasColumnType(@"nvarchar(255)").ValueGeneratedNever().HasMaxLength(255);
            modelBuilder.Entity<Liquidacion2015>().Property(x => x.Cliente).HasColumnName(@"cliente").HasColumnType(@"nvarchar(255)").ValueGeneratedNever().HasMaxLength(255);
            modelBuilder.Entity<Liquidacion2015>().HasKey(@"Numcompra");
        }

        partial void CustomizeLiquidacion2015Mapping(ModelBuilder modelBuilder);

        #endregion

        #region Listado Mapping

        private void ListadoMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Listado>().HasNoKey();
            modelBuilder.Entity<Listado>().ToView(@"Listado", @"dbo");
            modelBuilder.Entity<Listado>().Property(x => x.Solicitud).HasColumnName(@"Solicitud").HasColumnType(@"int").IsRequired().ValueGeneratedOnAdd().HasPrecision(10, 0);
            modelBuilder.Entity<Listado>().Property(x => x.Ranking).HasColumnName(@"Ranking").HasColumnType(@"int").ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<Listado>().Property(x => x.Cliente).HasColumnName(@"Cliente").HasColumnType(@"nvarchar(255)").ValueGeneratedNever().HasMaxLength(255);
            modelBuilder.Entity<Listado>().Property(x => x.Fecha).HasColumnName(@"Fecha").HasColumnType(@"datetime").ValueGeneratedNever();
            modelBuilder.Entity<Listado>().Property(x => x.Recibo).HasColumnName(@"Recibo").HasColumnType(@"nvarchar(255)").ValueGeneratedNever().HasMaxLength(255);
            modelBuilder.Entity<Listado>().Property(x => x.Total).HasColumnName(@"total").HasColumnType(@"decimal(18,2)").ValueGeneratedNever().HasPrecision(18, 2);
            modelBuilder.Entity<Listado>().Property(x => x.Codigo).HasColumnName(@"codigo").HasColumnType(@"nvarchar(255)").ValueGeneratedNever().HasMaxLength(255);
        }

        partial void CustomizeListadoMapping(ModelBuilder modelBuilder);

        #endregion

        #region Mcaja Mapping

        private void McajaMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Mcaja>().ToTable(@"mcaja", @"dbo");
            modelBuilder.Entity<Mcaja>().Property(x => x.Idcaja).HasColumnName(@"idcaja").HasColumnType(@"int").IsRequired().ValueGeneratedOnAdd().HasPrecision(10, 0);
            modelBuilder.Entity<Mcaja>().Property(x => x.Codcaja).HasColumnName(@"codcaja").HasColumnType(@"varchar(10)").IsRequired().ValueGeneratedNever().HasMaxLength(10);
            modelBuilder.Entity<Mcaja>().Property(x => x.Codagencia).HasColumnName(@"codagencia").HasColumnType(@"varchar(10)").ValueGeneratedNever().HasMaxLength(10);
            modelBuilder.Entity<Mcaja>().Property(x => x.Fecha).HasColumnName(@"fecha").HasColumnType(@"date").ValueGeneratedNever();
            modelBuilder.Entity<Mcaja>().Property(x => x.Sinicial).HasColumnName(@"sinicial").HasColumnType(@"numeric(18,2)").ValueGeneratedNever().HasPrecision(18, 2);
            modelBuilder.Entity<Mcaja>().Property(x => x.Entrada).HasColumnName(@"entrada").HasColumnType(@"numeric(18,2)").ValueGeneratedNever().HasPrecision(18, 2);
            modelBuilder.Entity<Mcaja>().Property(x => x.Salida).HasColumnName(@"salida").HasColumnType(@"numeric(18,2)").ValueGeneratedNever().HasPrecision(18, 2);
            modelBuilder.Entity<Mcaja>().Property(x => x.Sfinal).HasColumnName(@"sfinal").HasColumnType(@"numeric(18,2)").ValueGeneratedNever().HasPrecision(18, 2);
            modelBuilder.Entity<Mcaja>().Property(x => x.Estado).HasColumnName(@"estado").HasColumnType(@"int").ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<Mcaja>().HasKey(@"Idcaja");
        }

        partial void CustomizeMcajaMapping(ModelBuilder modelBuilder);

        #endregion

        #region Moneda Mapping

        private void MonedaMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Moneda>().ToTable(@"moneda", @"dbo");
            modelBuilder.Entity<Moneda>().Property(x => x.Codmoneda).HasColumnName(@"codmoneda").HasColumnType(@"int").IsRequired().ValueGeneratedOnAdd().HasPrecision(10, 0);
            modelBuilder.Entity<Moneda>().Property(x => x.Descripcion).HasColumnName(@"descripcion").HasColumnType(@"varchar(250)").ValueGeneratedNever().HasMaxLength(250);
            modelBuilder.Entity<Moneda>().Property(x => x.Simbolo).HasColumnName(@"simbolo").HasColumnType(@"varchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Moneda>().Property(x => x.Fecha).HasColumnName(@"fecha").HasColumnType(@"date").ValueGeneratedNever();
            modelBuilder.Entity<Moneda>().HasKey(@"Codmoneda");
        }

        partial void CustomizeMonedaMapping(ModelBuilder modelBuilder);

        #endregion

        #region Movcaja Mapping

        private void MovcajaMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Movcaja>().ToTable(@"movcaja", @"dbo");
            modelBuilder.Entity<Movcaja>().Property(x => x.Idmov).HasColumnName(@"idmov").HasColumnType(@"int").IsRequired().ValueGeneratedOnAdd().HasPrecision(10, 0);
            modelBuilder.Entity<Movcaja>().Property(x => x.Descripcion).HasColumnName(@"descripcion").HasColumnType(@"varchar(250)").IsRequired().ValueGeneratedNever().HasMaxLength(250);
            modelBuilder.Entity<Movcaja>().Property(x => x.Codrubro).HasColumnName(@"codrubro").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<Movcaja>().HasKey(@"Idmov");
        }

        partial void CustomizeMovcajaMapping(ModelBuilder modelBuilder);

        #endregion

        #region PagosAdelantado Mapping

        private void PagosAdelantadoMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<PagosAdelantado>().HasNoKey();
            modelBuilder.Entity<PagosAdelantado>().ToView(@"pagos_adelantados", @"dbo");
            modelBuilder.Entity<PagosAdelantado>().Property(x => x.IdPagoefec).HasColumnName(@"IdPagoefec").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<PagosAdelantado>().Property(x => x.Idingreso).HasColumnName(@"Idingreso").HasColumnType(@"char(14)").IsRequired().ValueGeneratedNever().HasMaxLength(14);
            modelBuilder.Entity<PagosAdelantado>().Property(x => x.Codagencia).HasColumnName(@"codagencia").HasColumnType(@"char(4)").ValueGeneratedNever().HasMaxLength(4);
            modelBuilder.Entity<PagosAdelantado>().Property(x => x.FechaopParcial).HasColumnName(@"fechaop_parcial").HasColumnType(@"date").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<PagosAdelantado>().Property(x => x.ValorParcialpagado).HasColumnName(@"valor_parcialpagado").HasColumnType(@"decimal(11,2)").IsRequired().ValueGeneratedNever().HasPrecision(11, 2);
            modelBuilder.Entity<PagosAdelantado>().Property(x => x.Usuario).HasColumnName(@"usuario").HasColumnType(@"char(10)").IsRequired().ValueGeneratedNever().HasMaxLength(10);
            modelBuilder.Entity<PagosAdelantado>().Property(x => x.HoraOp).HasColumnName(@"hora_op").HasColumnType(@"date").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<PagosAdelantado>().Property(x => x.EstadoOp).HasColumnName(@"estado_op").HasColumnType(@"char(3)").IsRequired().ValueGeneratedNever().HasMaxLength(3);
            modelBuilder.Entity<PagosAdelantado>().Property(x => x.CajaRegadel).HasColumnName(@"caja_regadel").HasColumnType(@"varchar(8)").ValueGeneratedNever().HasMaxLength(8);
        }

        partial void CustomizePagosAdelantadoMapping(ModelBuilder modelBuilder);

        #endregion

        #region Pica Mapping

        private void PicaMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Pica>().ToTable(@"Pica", @"dbo");
            modelBuilder.Entity<Pica>().Property(x => x.Codcliente).HasColumnName(@"codcliente").HasColumnType(@"varchar(20)").IsRequired().ValueGeneratedNever().HasMaxLength(20);
            modelBuilder.Entity<Pica>().Property(x => x.NombreEntidad).HasColumnName(@"nombre_entidad").HasColumnType(@"varchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Pica>().Property(x => x.TipoRelacion).HasColumnName(@"tipo_relacion").HasColumnType(@"varchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Pica>().Property(x => x.TiempoMantener).HasColumnName(@"tiempo_mantener").HasColumnType(@"varchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Pica>().Property(x => x.IngresoMensual).HasColumnName(@"ingreso_mensual").HasColumnType(@"money").ValueGeneratedNever().HasPrecision(19, 4);
            modelBuilder.Entity<Pica>().HasKey(@"Codcliente");
        }

        partial void CustomizePicaMapping(ModelBuilder modelBuilder);

        #endregion

        #region PrecioKilate Mapping

        private void PrecioKilateMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<PrecioKilate>().ToTable(@"PrecioKilate", @"dbo");
            modelBuilder.Entity<PrecioKilate>().Property(x => x.Idprecio).HasColumnName(@"idprecio").HasColumnType(@"int").IsRequired().ValueGeneratedOnAdd().HasPrecision(10, 0);
            modelBuilder.Entity<PrecioKilate>().Property(x => x.DescKilate).HasColumnName(@"desc_kilate").HasColumnType(@"varchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<PrecioKilate>().Property(x => x.KilatePeso).HasColumnName(@"kilate_peso").HasColumnType(@"numeric(18,2)").IsRequired().ValueGeneratedNever().HasPrecision(18, 2);
            modelBuilder.Entity<PrecioKilate>().Property(x => x.PrecioKilate1).HasColumnName(@"precio_kilate").HasColumnType(@"numeric(18,2)").IsRequired().ValueGeneratedNever().HasPrecision(18, 2);
            modelBuilder.Entity<PrecioKilate>().HasKey(@"Idprecio");
        }

        partial void CustomizePrecioKilateMapping(ModelBuilder modelBuilder);

        #endregion

        #region Precio Mapping

        private void PrecioMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Precio>().ToTable(@"Precios", @"dbo");
            modelBuilder.Entity<Precio>().Property(x => x.Codcliente).HasColumnName(@"codcliente").HasColumnType(@"varchar(20)").IsRequired().ValueGeneratedNever().HasMaxLength(20);
            modelBuilder.Entity<Precio>().Property(x => x.Kilate).HasColumnName(@"kilate").HasColumnType(@"decimal(12,2)").IsRequired().ValueGeneratedNever().HasPrecision(12, 2);
            modelBuilder.Entity<Precio>().Property(x => x.Precio1).HasColumnName(@"precio").HasColumnType(@"decimal(12,2)").IsRequired().ValueGeneratedNever().HasPrecision(12, 2);
            modelBuilder.Entity<Precio>().Property(x => x.Gramos).HasColumnName(@"gramos").HasColumnType(@"decimal(12,3)").IsRequired().ValueGeneratedNever().HasPrecision(12, 3);
            modelBuilder.Entity<Precio>().Property(x => x.PrecioOro).HasColumnName(@"precio_oro").HasColumnType(@"decimal(12,3)").IsRequired().ValueGeneratedNever().HasPrecision(12, 3);
            modelBuilder.Entity<Precio>().HasKey(@"Codcliente", @"Kilate");
        }

        partial void CustomizePrecioMapping(ModelBuilder modelBuilder);

        #endregion

        #region ReporteCaja Mapping

        private void ReporteCajaMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<ReporteCaja>().ToTable(@"ReporteCaja", @"dbo");
            modelBuilder.Entity<ReporteCaja>().Property(x => x.Codagencia).HasColumnName(@"codagencia").HasColumnType(@"varchar(10)").IsRequired().ValueGeneratedNever().HasMaxLength(10);
            modelBuilder.Entity<ReporteCaja>().Property(x => x.Codrubro).HasColumnName(@"codrubro").HasColumnType(@"varchar(10)").IsRequired().ValueGeneratedNever().HasMaxLength(10);
            modelBuilder.Entity<ReporteCaja>().Property(x => x.Codoperador).HasColumnName(@"codoperador").HasColumnType(@"varchar(10)").IsRequired().ValueGeneratedNever().HasMaxLength(10);
            modelBuilder.Entity<ReporteCaja>().Property(x => x.Monto).HasColumnName(@"monto").HasColumnType(@"money").IsRequired().ValueGeneratedNever().HasPrecision(19, 4);
            modelBuilder.Entity<ReporteCaja>().Property(x => x.Fecha).HasColumnName(@"fecha").HasColumnType(@"date").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<ReporteCaja>().HasKey(@"Codagencia");
        }

        partial void CustomizeReporteCajaMapping(ModelBuilder modelBuilder);

        #endregion

        #region Rubro Mapping

        private void RubroMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Rubro>().ToTable(@"Rubro", @"dbo");
            modelBuilder.Entity<Rubro>().Property(x => x.Codrubro).HasColumnName(@"codrubro").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<Rubro>().Property(x => x.Descrubro).HasColumnName(@"descrubro").HasColumnType(@"varchar(250)").IsRequired().ValueGeneratedNever().HasMaxLength(250);
            modelBuilder.Entity<Rubro>().Property(x => x.Naturaleza).HasColumnName(@"naturaleza").HasColumnType(@"int").ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<Rubro>().HasKey(@"Codrubro");
        }

        partial void CustomizeRubroMapping(ModelBuilder modelBuilder);

        #endregion

        #region TipoCambio Mapping

        private void TipoCambioMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<TipoCambio>().ToTable(@"TipoCambio", @"dbo");
            modelBuilder.Entity<TipoCambio>().Property(x => x.Fecha).HasColumnName(@"fecha").HasColumnType(@"date").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<TipoCambio>().Property(x => x.Tipocambio).HasColumnName(@"tipocambio").HasColumnType(@"numeric(12,4)").IsRequired().ValueGeneratedNever().HasPrecision(12, 4);
            modelBuilder.Entity<TipoCambio>().Property(x => x.Hora).HasColumnName(@"hora").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<TipoCambio>().Property(x => x.PrecioOro).HasColumnName(@"precio_oro").HasColumnType(@"decimal(18,4)").ValueGeneratedNever().HasPrecision(18, 4);
            modelBuilder.Entity<TipoCambio>().HasKey(@"Fecha");
        }

        partial void CustomizeTipoCambioMapping(ModelBuilder modelBuilder);

        #endregion

        #region TipoPreciosPagado Mapping

        private void TipoPreciosPagadoMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<TipoPreciosPagado>().ToTable(@"TipoPreciosPagados", @"dbo");
            modelBuilder.Entity<TipoPreciosPagado>().Property(x => x.Codprecio).HasColumnName(@"codprecio").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<TipoPreciosPagado>().Property(x => x.Descripcion).HasColumnName(@"descripcion").HasColumnType(@"varchar(100)").IsRequired().ValueGeneratedNever().HasMaxLength(100);
            modelBuilder.Entity<TipoPreciosPagado>().Property(x => x.Pesoinicial).HasColumnName(@"pesoinicial").HasColumnType(@"varchar(20)").IsRequired().ValueGeneratedNever().HasMaxLength(20);
            modelBuilder.Entity<TipoPreciosPagado>().Property(x => x.Pesofinal).HasColumnName(@"pesofinal").HasColumnType(@"varchar(20)").IsRequired().ValueGeneratedNever().HasMaxLength(20);
            modelBuilder.Entity<TipoPreciosPagado>().HasKey(@"Codprecio");
        }

        partial void CustomizeTipoPreciosPagadoMapping(ModelBuilder modelBuilder);

        #endregion

        #region Tmpprecio Mapping

        private void TmpprecioMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Tmpprecio>().ToTable(@"tmpprecio", @"dbo");
            modelBuilder.Entity<Tmpprecio>().Property(x => x.Codcierre).HasColumnName(@"codcierre").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<Tmpprecio>().Property(x => x.Linea).HasColumnName(@"linea").HasColumnType(@"tinyint").IsRequired().ValueGeneratedNever().HasPrecision(3, 0);
            modelBuilder.Entity<Tmpprecio>().Property(x => x.Codcliente).HasColumnName(@"codcliente").HasColumnType(@"varchar(20)").IsRequired().ValueGeneratedNever().HasMaxLength(20);
            modelBuilder.Entity<Tmpprecio>().Property(x => x.Cantidad).HasColumnName(@"cantidad").HasColumnType(@"decimal(12,3)").IsRequired().ValueGeneratedNever().HasPrecision(12, 3);
            modelBuilder.Entity<Tmpprecio>().Property(x => x.Fecha).HasColumnName(@"fecha").HasColumnType(@"datetime").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<Tmpprecio>().HasKey(@"Codcierre", @"Linea");
        }

        partial void CustomizeTmpprecioMapping(ModelBuilder modelBuilder);

        #endregion

        #region Usuario Mapping

        private void UsuarioMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Usuario>().ToTable(@"usuario", @"dbo");
            modelBuilder.Entity<Usuario>().Property(x => x.Codoperador).HasColumnName(@"codoperador").HasColumnType(@"varchar(20)").IsRequired().ValueGeneratedNever().HasMaxLength(20);
            modelBuilder.Entity<Usuario>().Property(x => x.Usuario1).HasColumnName(@"usuario").HasColumnType(@"varchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Usuario>().Property(x => x.Clave).HasColumnName(@"clave").HasColumnType(@"varchar(20)").IsRequired().ValueGeneratedNever().HasMaxLength(20);
            modelBuilder.Entity<Usuario>().Property(x => x.Nombre).HasColumnName(@"nombre").HasColumnType(@"varchar(100)").IsRequired().ValueGeneratedNever().HasMaxLength(100);
            modelBuilder.Entity<Usuario>().Property(x => x.Pregunta).HasColumnName(@"pregunta").HasColumnType(@"varchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Usuario>().Property(x => x.Respuesta).HasColumnName(@"respuesta").HasColumnType(@"varchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Usuario>().Property(x => x.Fcreau).HasColumnName(@"fcreau").HasColumnType(@"date").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<Usuario>().Property(x => x.Nivel).HasColumnName(@"nivel").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<Usuario>().Property(x => x.Estado).HasColumnName(@"estado").HasColumnType(@"varchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Usuario>().HasKey(@"Usuario1");
        }

        partial void CustomizeUsuarioMapping(ModelBuilder modelBuilder);

        #endregion

        #region ComprasOperador Mapping

        private void ComprasOperadorMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<ComprasOperador>().HasNoKey();
            modelBuilder.Entity<ComprasOperador>().ToView(@"compras_operador", @"dbo");
            modelBuilder.Entity<ComprasOperador>().Property(x => x.Nombre).HasColumnName(@"nombre").HasColumnType(@"varchar(100)").IsRequired().ValueGeneratedNever().HasMaxLength(100);
            modelBuilder.Entity<ComprasOperador>().Property(x => x.Numcompra).HasColumnName(@"numcompra").HasColumnType(@"varchar(20)").IsRequired().ValueGeneratedNever().HasMaxLength(20);
            modelBuilder.Entity<ComprasOperador>().Property(x => x.Fecha).HasColumnName(@"fecha").HasColumnType(@"date").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<ComprasOperador>().Property(x => x.PesoTotal).HasColumnName(@"peso_total").HasColumnType(@"decimal(11,2)").IsRequired().ValueGeneratedNever().HasPrecision(11, 2);
            modelBuilder.Entity<ComprasOperador>().Property(x => x.Total).HasColumnName(@"total").HasColumnType(@"decimal(15,2)").IsRequired().ValueGeneratedNever().HasPrecision(15, 2);
            modelBuilder.Entity<ComprasOperador>().Property(x => x.Codcaja).HasColumnName(@"codcaja").HasColumnType(@"varchar(10)").IsRequired().ValueGeneratedNever().HasMaxLength(10);
            modelBuilder.Entity<ComprasOperador>().Property(x => x.Hora).HasColumnName(@"hora").HasColumnType(@"varchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<ComprasOperador>().Property(x => x.Kilate).HasColumnName(@"kilate").HasColumnType(@"varchar(20)").IsRequired().ValueGeneratedNever().HasMaxLength(20);
            modelBuilder.Entity<ComprasOperador>().Property(x => x.Peso).HasColumnName(@"peso").HasColumnType(@"numeric(18,2)").IsRequired().ValueGeneratedNever().HasPrecision(18, 2);
            modelBuilder.Entity<ComprasOperador>().Property(x => x.Importe).HasColumnName(@"importe").HasColumnType(@"numeric(18,2)").ValueGeneratedNever().HasPrecision(18, 2);
            modelBuilder.Entity<ComprasOperador>().Property(x => x.Preciok).HasColumnName(@"preciok").HasColumnType(@"numeric(18,2)").IsRequired().ValueGeneratedNever().HasPrecision(18, 2);
            modelBuilder.Entity<ComprasOperador>().Property(x => x.Codcliente).HasColumnName(@"codcliente").HasColumnType(@"varchar(20)").IsRequired().ValueGeneratedNever().HasMaxLength(20);
            modelBuilder.Entity<ComprasOperador>().Property(x => x.Codagencia).HasColumnName(@"codagencia").HasColumnType(@"varchar(10)").IsRequired().ValueGeneratedNever().HasMaxLength(10);
        }

        partial void CustomizeComprasOperadorMapping(ModelBuilder modelBuilder);

        #endregion

        #region DescargueByCompra Mapping

        private void DescargueByCompraMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<DescargueByCompra>().HasNoKey();
            modelBuilder.Entity<DescargueByCompra>().ToView(@"descargueByCompra", @"dbo");
            modelBuilder.Entity<DescargueByCompra>().Property(x => x.Dgnumdes).HasColumnName(@"dgnumdes").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<DescargueByCompra>().Property(x => x.Dgfecdes).HasColumnName(@"dgfecdes").HasColumnType(@"date").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<DescargueByCompra>().Property(x => x.Numcompra).HasColumnName(@"numcompra").HasColumnType(@"varchar(20)").IsRequired().ValueGeneratedNever().HasMaxLength(20);
            modelBuilder.Entity<DescargueByCompra>().Property(x => x.Fecha).HasColumnName(@"fecha").HasColumnType(@"date").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<DescargueByCompra>().Property(x => x.Codcliente).HasColumnName(@"codcliente").HasColumnType(@"varchar(20)").IsRequired().ValueGeneratedNever().HasMaxLength(20);
            modelBuilder.Entity<DescargueByCompra>().Property(x => x.Nombres).HasColumnName(@"nombres").HasColumnType(@"varchar(35)").IsRequired().ValueGeneratedNever().HasMaxLength(35);
            modelBuilder.Entity<DescargueByCompra>().Property(x => x.Apellidos).HasColumnName(@"apellidos").HasColumnType(@"varchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<DescargueByCompra>().Property(x => x.Peso).HasColumnName(@"peso").HasColumnType(@"decimal(11,2)").IsRequired().ValueGeneratedNever().HasPrecision(11, 2);
            modelBuilder.Entity<DescargueByCompra>().Property(x => x.Total).HasColumnName(@"total").HasColumnType(@"decimal(15,2)").IsRequired().ValueGeneratedNever().HasPrecision(15, 2);
            modelBuilder.Entity<DescargueByCompra>().Property(x => x.Cantcompra).HasColumnName(@"Cantcompra").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
        }

        partial void CustomizeDescargueByCompraMapping(ModelBuilder modelBuilder);

        #endregion

        #region MovimientosCajaSelect Mapping

        private void MovimientosCajaSelectMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<MovimientosCajaSelect>().HasNoKey();
            modelBuilder.Entity<MovimientosCajaSelect>().ToView(@"MovimientosCajaSelect", @"dbo");
            modelBuilder.Entity<MovimientosCajaSelect>().Property(x => x.Estado).HasColumnName(@"estado").HasColumnType(@"int").ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<MovimientosCajaSelect>().Property(x => x.Codcaja).HasColumnName(@"codcaja").HasColumnType(@"varchar(10)").IsRequired().ValueGeneratedNever().HasMaxLength(10);
            modelBuilder.Entity<MovimientosCajaSelect>().Property(x => x.Hora).HasColumnName(@"hora").HasColumnType(@"varchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<MovimientosCajaSelect>().Property(x => x.Fecha).HasColumnName(@"fecha").HasColumnType(@"datetime").ValueGeneratedNever();
            modelBuilder.Entity<MovimientosCajaSelect>().Property(x => x.Concepto).HasColumnName(@"concepto").HasColumnType(@"varchar(250)").ValueGeneratedNever().HasMaxLength(250);
            modelBuilder.Entity<MovimientosCajaSelect>().Property(x => x.Efectivo).HasColumnName(@"efectivo").HasColumnType(@"numeric(18,2)").ValueGeneratedNever().HasPrecision(18, 2);
            modelBuilder.Entity<MovimientosCajaSelect>().Property(x => x.Cheque).HasColumnName(@"cheque").HasColumnType(@"numeric(18,2)").ValueGeneratedNever().HasPrecision(18, 2);
            modelBuilder.Entity<MovimientosCajaSelect>().Property(x => x.Transferencia).HasColumnName(@"transferencia").HasColumnType(@"numeric(18,2)").ValueGeneratedNever().HasPrecision(18, 2);
        }

        partial void CustomizeMovimientosCajaSelectMapping(ModelBuilder modelBuilder);

        #endregion

        #region RptMovimientosCaja Mapping

        private void RptMovimientosCajaMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<RptMovimientosCaja>().HasNoKey();
            modelBuilder.Entity<RptMovimientosCaja>().ToView(@"rptMovimientosCaja", @"dbo");
            modelBuilder.Entity<RptMovimientosCaja>().Property(x => x.Descrubro).HasColumnName(@"descrubro").HasColumnType(@"varchar(250)").IsRequired().ValueGeneratedNever().HasMaxLength(250);
            modelBuilder.Entity<RptMovimientosCaja>().Property(x => x.Descripcion).HasColumnName(@"descripcion").HasColumnType(@"varchar(250)").IsRequired().ValueGeneratedNever().HasMaxLength(250);
            modelBuilder.Entity<RptMovimientosCaja>().Property(x => x.Efectivo).HasColumnName(@"Efectivo").HasColumnType(@"numeric(38,2)").ValueGeneratedNever().HasPrecision(38, 2);
            modelBuilder.Entity<RptMovimientosCaja>().Property(x => x.Cheque).HasColumnName(@"cheque").HasColumnType(@"numeric(38,2)").ValueGeneratedNever().HasPrecision(38, 2);
            modelBuilder.Entity<RptMovimientosCaja>().Property(x => x.Transferencia).HasColumnName(@"transferencia").HasColumnType(@"numeric(38,2)").ValueGeneratedNever().HasPrecision(38, 2);
            modelBuilder.Entity<RptMovimientosCaja>().Property(x => x.Fecha).HasColumnName(@"fecha").HasColumnType(@"datetime").ValueGeneratedNever();
        }

        partial void CustomizeRptMovimientosCajaMapping(ModelBuilder modelBuilder);

        #endregion

        #region TransaccionEfectivo Mapping

        private void TransaccionEfectivoMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<TransaccionEfectivo>().HasNoKey();
            modelBuilder.Entity<TransaccionEfectivo>().ToView(@"TransaccionEfectivo", @"dbo");
            modelBuilder.Entity<TransaccionEfectivo>().Property(x => x.Numcompra).HasColumnName(@"numcompra").HasColumnType(@"varchar(20)").IsRequired().ValueGeneratedNever().HasMaxLength(20);
            modelBuilder.Entity<TransaccionEfectivo>().Property(x => x.Codcliente).HasColumnName(@"codcliente").HasColumnType(@"varchar(20)").IsRequired().ValueGeneratedNever().HasMaxLength(20);
            modelBuilder.Entity<TransaccionEfectivo>().Property(x => x.Nombres).HasColumnName(@"nombres").HasColumnType(@"varchar(35)").IsRequired().ValueGeneratedNever().HasMaxLength(35);
            modelBuilder.Entity<TransaccionEfectivo>().Property(x => x.Apellidos).HasColumnName(@"apellidos").HasColumnType(@"varchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<TransaccionEfectivo>().Property(x => x.Fecha).HasColumnName(@"fecha").HasColumnType(@"date").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<TransaccionEfectivo>().Property(x => x.FormaPago).HasColumnName(@"FormaPago").HasColumnType(@"varchar(13)").IsRequired().ValueGeneratedNever().HasMaxLength(13);
            modelBuilder.Entity<TransaccionEfectivo>().Property(x => x.Total).HasColumnName(@"total").HasColumnType(@"decimal(15,2)").IsRequired().ValueGeneratedNever().HasPrecision(15, 2);
        }

        partial void CustomizeTransaccionEfectivoMapping(ModelBuilder modelBuilder);

        #endregion

        #region Vdetacaja Mapping

        private void VdetacajaMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Vdetacaja>().HasNoKey();
            modelBuilder.Entity<Vdetacaja>().ToView(@"vdetacaja", @"dbo");
            modelBuilder.Entity<Vdetacaja>().Property(x => x.Idcaja).HasColumnName(@"idcaja").HasColumnType(@"numeric(18)").IsRequired().ValueGeneratedNever().HasPrecision(18, 0);
            modelBuilder.Entity<Vdetacaja>().Property(x => x.Idmov).HasColumnName(@"idmov").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<Vdetacaja>().Property(x => x.Hora).HasColumnName(@"hora").HasColumnType(@"varchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Vdetacaja>().Property(x => x.Fecha).HasColumnName(@"fecha").HasColumnType(@"datetime").ValueGeneratedNever();
            modelBuilder.Entity<Vdetacaja>().Property(x => x.Concepto).HasColumnName(@"concepto").HasColumnType(@"varchar(250)").ValueGeneratedNever().HasMaxLength(250);
            modelBuilder.Entity<Vdetacaja>().Property(x => x.Efectivo).HasColumnName(@"efectivo").HasColumnType(@"numeric(20,2)").ValueGeneratedNever().HasPrecision(20, 2);
            modelBuilder.Entity<Vdetacaja>().Property(x => x.Cheque).HasColumnName(@"cheque").HasColumnType(@"numeric(20,2)").ValueGeneratedNever().HasPrecision(20, 2);
            modelBuilder.Entity<Vdetacaja>().Property(x => x.Transferencia).HasColumnName(@"transferencia").HasColumnType(@"numeric(20,2)").ValueGeneratedNever().HasPrecision(20, 2);
            modelBuilder.Entity<Vdetacaja>().Property(x => x.Codcaja).HasColumnName(@"codcaja").HasColumnType(@"varchar(10)").ValueGeneratedNever().HasMaxLength(10);
            modelBuilder.Entity<Vdetacaja>().Property(x => x.Referencia).HasColumnName(@"referencia").HasColumnType(@"varchar(250)").ValueGeneratedNever().HasMaxLength(250);
            modelBuilder.Entity<Vdetacaja>().Property(x => x.Sinicial).HasColumnName(@"sinicial").HasColumnType(@"numeric(18,2)").ValueGeneratedNever().HasPrecision(18, 2);
            modelBuilder.Entity<Vdetacaja>().Property(x => x.Sfinal).HasColumnName(@"sfinal").HasColumnType(@"numeric(18,2)").ValueGeneratedNever().HasPrecision(18, 2);
        }

        partial void CustomizeVdetacajaMapping(ModelBuilder modelBuilder);

        #endregion

        #region VVariacionesCliente Mapping

        private void VVariacionesClienteMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<VVariacionesCliente>().HasNoKey();
            modelBuilder.Entity<VVariacionesCliente>().ToView(@"vVariacionesCliente", @"dbo");
            modelBuilder.Entity<VVariacionesCliente>().Property(x => x.Codcliente).HasColumnName(@"codcliente").HasColumnType(@"varchar(20)").IsRequired().ValueGeneratedNever().HasMaxLength(20);
            modelBuilder.Entity<VVariacionesCliente>().Property(x => x.Nombres).HasColumnName(@"nombres").HasColumnType(@"varchar(35)").IsRequired().ValueGeneratedNever().HasMaxLength(35);
            modelBuilder.Entity<VVariacionesCliente>().Property(x => x.Apellidos).HasColumnName(@"apellidos").HasColumnType(@"varchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<VVariacionesCliente>().Property(x => x.Mes).HasColumnName(@"mes").HasColumnType(@"nvarchar(30)").ValueGeneratedNever().HasMaxLength(30);
            modelBuilder.Entity<VVariacionesCliente>().Property(x => x.Monto).HasColumnName(@"Monto").HasColumnType(@"numeric(32,8)").ValueGeneratedNever().HasPrecision(32, 8);
            modelBuilder.Entity<VVariacionesCliente>().Property(x => x.MontoMensual).HasColumnName(@"Monto Mensual").HasColumnType(@"decimal(38,2)").ValueGeneratedNever().HasPrecision(38, 2);
            modelBuilder.Entity<VVariacionesCliente>().Property(x => x.Variacion).HasColumnName(@"Variacion").HasColumnType(@"numeric(38,6)").ValueGeneratedNever().HasPrecision(38, 6);
            modelBuilder.Entity<VVariacionesCliente>().Property(x => x.Fecha).HasColumnName(@"fecha").HasColumnType(@"date").IsRequired().ValueGeneratedNever();
        }

        partial void CustomizeVVariacionesClienteMapping(ModelBuilder modelBuilder);

        #endregion

        private void RelationshipsMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Adelanto>().HasMany(x => x.ComprasAdelantos).WithOne(op => op.Adelanto).HasForeignKey(@"Idadelanto").IsRequired(true);

            modelBuilder.Entity<Agencia>().HasMany(x => x.Compras).WithOne(op => op.Agencia).HasForeignKey(@"Codagencia").IsRequired(true);
            modelBuilder.Entity<Agencia>().HasMany(x => x.ComprasAdelantos).WithOne(op => op.Agencia).HasForeignKey(@"Codagencia").IsRequired(false);
            modelBuilder.Entity<Agencia>().HasMany(x => x.DetCompras).WithOne(op => op.Agencia).HasForeignKey(@"Codagencia").IsRequired(false);
            modelBuilder.Entity<Agencia>().HasMany(x => x.Detacierres).WithOne(op => op.Agencia).HasForeignKey(@"Codagencia").IsRequired(true);
            modelBuilder.Entity<Agencia>().HasMany(x => x.Mcajas).WithOne(op => op.Agencia).HasForeignKey(@"Codagencia").IsRequired(false);

            modelBuilder.Entity<Caja>().HasMany(x => x.Compras).WithOne(op => op.Caja).HasForeignKey(@"Codcaja").IsRequired(true);
            modelBuilder.Entity<Caja>().HasMany(x => x.ComprasAdelantos).WithOne(op => op.Caja).HasForeignKey(@"Codcaja").IsRequired(true);
            modelBuilder.Entity<Caja>().HasMany(x => x.Detacajas).WithOne(op => op.Caja).HasForeignKey(@"Codcaja").IsRequired(false);
            modelBuilder.Entity<Caja>().HasMany(x => x.Mcajas).WithOne(op => op.Caja).HasForeignKey(@"Codcaja").IsRequired(true);

            modelBuilder.Entity<CierrePrecio>().HasOne(x => x.Cliente).WithMany(op => op.CierrePrecios).HasForeignKey(@"Codcliente").IsRequired(true);

            modelBuilder.Entity<Cliente>().HasMany(x => x.CierrePrecios).WithOne(op => op.Cliente).HasForeignKey(@"Codcliente").IsRequired(true);
            modelBuilder.Entity<Cliente>().HasMany(x => x.Compras).WithOne(op => op.Cliente).HasForeignKey(@"Codcliente").IsRequired(true);
            modelBuilder.Entity<Cliente>().HasMany(x => x.ComprasAdelantos).WithOne(op => op.Cliente).HasForeignKey(@"Codcliente").IsRequired(false);

            modelBuilder.Entity<Compra>().HasOne(x => x.Agencia).WithMany(op => op.Compras).HasForeignKey(@"Codagencia").IsRequired(true);
            modelBuilder.Entity<Compra>().HasOne(x => x.Cliente).WithMany(op => op.Compras).HasForeignKey(@"Codcliente").IsRequired(true);
            modelBuilder.Entity<Compra>().HasOne(x => x.Caja).WithMany(op => op.Compras).HasForeignKey(@"Codcaja").IsRequired(true);
            modelBuilder.Entity<Compra>().HasOne(x => x.Moneda).WithMany(op => op.Compras).HasForeignKey(@"Codmoneda").IsRequired(true);
            modelBuilder.Entity<Compra>().HasMany(x => x.ComprasAdelantos).WithOne(op => op.Compra).HasForeignKey(@"Numcompra").IsRequired(true);
            modelBuilder.Entity<Compra>().HasMany(x => x.DetCompras).WithOne(op => op.Compra).HasForeignKey(@"Numcompra").IsRequired(true);
            modelBuilder.Entity<Compra>().HasMany(x => x.Detacierres).WithOne(op => op.Compra).HasForeignKey(@"Numcompra").IsRequired(true);

            modelBuilder.Entity<ComprasAdelanto>().HasOne(x => x.Agencia).WithMany(op => op.ComprasAdelantos).HasForeignKey(@"Codagencia").IsRequired(false);
            modelBuilder.Entity<ComprasAdelanto>().HasOne(x => x.Cliente).WithMany(op => op.ComprasAdelantos).HasForeignKey(@"Codcliente").IsRequired(false);
            modelBuilder.Entity<ComprasAdelanto>().HasOne(x => x.Adelanto).WithMany(op => op.ComprasAdelantos).HasForeignKey(@"Idadelanto").IsRequired(true);
            modelBuilder.Entity<ComprasAdelanto>().HasOne(x => x.Caja).WithMany(op => op.ComprasAdelantos).HasForeignKey(@"Codcaja").IsRequired(true);
            modelBuilder.Entity<ComprasAdelanto>().HasOne(x => x.Compra).WithMany(op => op.ComprasAdelantos).HasForeignKey(@"Numcompra").IsRequired(true);
            modelBuilder.Entity<ComprasAdelanto>().HasOne(x => x.Moneda).WithMany(op => op.ComprasAdelantos).HasForeignKey(@"Codmoneda").IsRequired(false);

            modelBuilder.Entity<DetCompra>().HasOne(x => x.Compra).WithMany(op => op.DetCompras).HasForeignKey(@"Numcompra").IsRequired(true);
            modelBuilder.Entity<DetCompra>().HasOne(x => x.Agencia).WithMany(op => op.DetCompras).HasForeignKey(@"Codagencia").IsRequired(false);

            modelBuilder.Entity<Detacaja>().HasOne(x => x.Caja).WithMany(op => op.Detacajas).HasForeignKey(@"Codcaja").IsRequired(false);
            modelBuilder.Entity<Detacaja>().HasOne(x => x.Mcaja).WithMany(op => op.Detacajas).HasForeignKey(@"Idcaja").IsRequired(true);
            modelBuilder.Entity<Detacaja>().HasOne(x => x.Movcaja).WithMany(op => op.Detacajas).HasForeignKey(@"Idmov").IsRequired(true);

            modelBuilder.Entity<Detacierre>().HasOne(x => x.Agencia).WithMany(op => op.Detacierres).HasForeignKey(@"Codagencia").IsRequired(true);
            modelBuilder.Entity<Detacierre>().HasOne(x => x.Compra).WithMany(op => op.Detacierres).HasForeignKey(@"Numcompra").IsRequired(true);

            modelBuilder.Entity<Mcaja>().HasMany(x => x.Detacajas).WithOne(op => op.Mcaja).HasForeignKey(@"Idcaja").IsRequired(true);
            modelBuilder.Entity<Mcaja>().HasOne(x => x.Agencia).WithMany(op => op.Mcajas).HasForeignKey(@"Codagencia").IsRequired(false);
            modelBuilder.Entity<Mcaja>().HasOne(x => x.Caja).WithMany(op => op.Mcajas).HasForeignKey(@"Codcaja").IsRequired(true);

            modelBuilder.Entity<Moneda>().HasMany(x => x.Compras).WithOne(op => op.Moneda).HasForeignKey(@"Codmoneda").IsRequired(true);
            modelBuilder.Entity<Moneda>().HasMany(x => x.ComprasAdelantos).WithOne(op => op.Moneda).HasForeignKey(@"Codmoneda").IsRequired(false);

            modelBuilder.Entity<Movcaja>().HasMany(x => x.Detacajas).WithOne(op => op.Movcaja).HasForeignKey(@"Idmov").IsRequired(true);
            modelBuilder.Entity<Movcaja>().HasOne(x => x.Rubro).WithMany(op => op.Movcajas).HasForeignKey(@"Codrubro").IsRequired(true);

            modelBuilder.Entity<Pica>().HasOne(x => x.Cliente).WithOne(op => op.Pica1).HasForeignKey(typeof(Pica), @"Codcliente").IsRequired(true);

            modelBuilder.Entity<Rubro>().HasMany(x => x.Movcajas).WithOne(op => op.Rubro).HasForeignKey(@"Codrubro").IsRequired(true);
        }

        partial void CustomizeMapping(ref ModelBuilder modelBuilder);

        public bool HasChanges()
        {
            return ChangeTracker.Entries().Any(e => e.State == Microsoft.EntityFrameworkCore.EntityState.Added || e.State == Microsoft.EntityFrameworkCore.EntityState.Modified || e.State == Microsoft.EntityFrameworkCore.EntityState.Deleted);
        }

        partial void OnCreated();
    }
}
