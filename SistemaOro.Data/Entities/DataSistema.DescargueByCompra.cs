//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Entity Developer tool using EF Core template.
// Code is generated on: 26/10/2024 6:22:50 AM
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

#nullable enable annotations
#nullable disable warnings

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Common;
using System.Linq;
using System.Linq.Expressions;

namespace SistemaOro.Data.Entities
{
    public partial class DescargueByCompra : INotifyPropertyChanging, INotifyPropertyChanged {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);

        private int _Dgnumdes;

        private DateTime _Dgfecdes;

        private string _Numcompra;

        private DateTime _Fecha;

        private string _Codcliente;

        private string _Nombres;

        private string? _Apellidos;

        private decimal _Peso;

        private decimal _Total;

        private int _Cantcompra;

        public DescargueByCompra()
        {
            OnCreated();
        }

        public int Dgnumdes
        {
            get
            {
                return this._Dgnumdes;
            }
            set
            {
                if (this._Dgnumdes != value)
                {
                    this.SendPropertyChanging("Dgnumdes");
                    this._Dgnumdes = value;
                    this.SendPropertyChanged("Dgnumdes");
                }
            }
        }

        public DateTime Dgfecdes
        {
            get
            {
                return this._Dgfecdes;
            }
            set
            {
                if (this._Dgfecdes != value)
                {
                    this.SendPropertyChanging("Dgfecdes");
                    this._Dgfecdes = value;
                    this.SendPropertyChanged("Dgfecdes");
                }
            }
        }

        public string Numcompra
        {
            get
            {
                return this._Numcompra;
            }
            set
            {
                if (this._Numcompra != value)
                {
                    this.SendPropertyChanging("Numcompra");
                    this._Numcompra = value;
                    this.SendPropertyChanged("Numcompra");
                }
            }
        }

        public DateTime Fecha
        {
            get
            {
                return this._Fecha;
            }
            set
            {
                if (this._Fecha != value)
                {
                    this.SendPropertyChanging("Fecha");
                    this._Fecha = value;
                    this.SendPropertyChanged("Fecha");
                }
            }
        }

        public string Codcliente
        {
            get
            {
                return this._Codcliente;
            }
            set
            {
                if (this._Codcliente != value)
                {
                    this.SendPropertyChanging("Codcliente");
                    this._Codcliente = value;
                    this.SendPropertyChanged("Codcliente");
                }
            }
        }

        public string Nombres
        {
            get
            {
                return this._Nombres;
            }
            set
            {
                if (this._Nombres != value)
                {
                    this.SendPropertyChanging("Nombres");
                    this._Nombres = value;
                    this.SendPropertyChanged("Nombres");
                }
            }
        }

        public string? Apellidos
        {
            get
            {
                return this._Apellidos;
            }
            set
            {
                if (this._Apellidos != value)
                {
                    this.SendPropertyChanging("Apellidos");
                    this._Apellidos = value;
                    this.SendPropertyChanged("Apellidos");
                }
            }
        }

        public decimal Peso
        {
            get
            {
                return this._Peso;
            }
            set
            {
                if (this._Peso != value)
                {
                    this.SendPropertyChanging("Peso");
                    this._Peso = value;
                    this.SendPropertyChanged("Peso");
                }
            }
        }

        public decimal Total
        {
            get
            {
                return this._Total;
            }
            set
            {
                if (this._Total != value)
                {
                    this.SendPropertyChanging("Total");
                    this._Total = value;
                    this.SendPropertyChanged("Total");
                }
            }
        }

        public int Cantcompra
        {
            get
            {
                return this._Cantcompra;
            }
            set
            {
                if (this._Cantcompra != value)
                {
                    this.SendPropertyChanging("Cantcompra");
                    this._Cantcompra = value;
                    this.SendPropertyChanged("Cantcompra");
                }
            }
        }

        #region Extensibility Method Definitions

        partial void OnCreated();

        #endregion

        public virtual event PropertyChangingEventHandler PropertyChanging;

        public virtual event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {
            var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

}
