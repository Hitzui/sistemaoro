//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Entity Developer tool using EF Core template.
// Code is generated on: 27/7/2025 7:04:52 PM
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

#nullable enable annotations
#nullable disable warnings

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Common;
using System.Linq;
using System.Linq.Expressions;

namespace SistemaOro.Data.Entities
{
    public partial class FormaPago : INotifyPropertyChanging, INotifyPropertyChanged {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);

        private int _Idformapago;

        private string? _Numcompra;

        private decimal? _Monto1;

        private decimal? _Monto2;

        private decimal? _Total;

        private DateTime? _Fecha;

        private string? _Codusuario;

        private string? _Codcaja;

        private string? _Codagencia;

        private decimal? _Tipocambio;

        private Compra _Compra;

        public FormaPago()
        {
            OnCreated();
        }

        public int Idformapago
        {
            get
            {
                return this._Idformapago;
            }
            set
            {
                if (this._Idformapago != value)
                {
                    this.SendPropertyChanging("Idformapago");
                    this._Idformapago = value;
                    this.SendPropertyChanged("Idformapago");
                }
            }
        }

        public string? Numcompra
        {
            get
            {
                return this._Numcompra;
            }
            set
            {
                if (this._Numcompra != value)
                {
                    this.SendPropertyChanging("Numcompra");
                    this._Numcompra = value;
                    this.SendPropertyChanged("Numcompra");
                }
            }
        }

        public decimal? Monto1
        {
            get
            {
                return this._Monto1;
            }
            set
            {
                if (this._Monto1 != value)
                {
                    this.SendPropertyChanging("Monto1");
                    this._Monto1 = value;
                    this.SendPropertyChanged("Monto1");
                }
            }
        }

        public decimal? Monto2
        {
            get
            {
                return this._Monto2;
            }
            set
            {
                if (this._Monto2 != value)
                {
                    this.SendPropertyChanging("Monto2");
                    this._Monto2 = value;
                    this.SendPropertyChanged("Monto2");
                }
            }
        }

        public decimal? Total
        {
            get
            {
                return this._Total;
            }
            set
            {
                if (this._Total != value)
                {
                    this.SendPropertyChanging("Total");
                    this._Total = value;
                    this.SendPropertyChanged("Total");
                }
            }
        }

        public DateTime? Fecha
        {
            get
            {
                return this._Fecha;
            }
            set
            {
                if (this._Fecha != value)
                {
                    this.SendPropertyChanging("Fecha");
                    this._Fecha = value;
                    this.SendPropertyChanged("Fecha");
                }
            }
        }

        public string? Codusuario
        {
            get
            {
                return this._Codusuario;
            }
            set
            {
                if (this._Codusuario != value)
                {
                    this.SendPropertyChanging("Codusuario");
                    this._Codusuario = value;
                    this.SendPropertyChanged("Codusuario");
                }
            }
        }

        public string? Codcaja
        {
            get
            {
                return this._Codcaja;
            }
            set
            {
                if (this._Codcaja != value)
                {
                    this.SendPropertyChanging("Codcaja");
                    this._Codcaja = value;
                    this.SendPropertyChanged("Codcaja");
                }
            }
        }

        public string? Codagencia
        {
            get
            {
                return this._Codagencia;
            }
            set
            {
                if (this._Codagencia != value)
                {
                    this.SendPropertyChanging("Codagencia");
                    this._Codagencia = value;
                    this.SendPropertyChanged("Codagencia");
                }
            }
        }

        public decimal? Tipocambio
        {
            get
            {
                return this._Tipocambio;
            }
            set
            {
                if (this._Tipocambio != value)
                {
                    this.SendPropertyChanging("Tipocambio");
                    this._Tipocambio = value;
                    this.SendPropertyChanged("Tipocambio");
                }
            }
        }

        public virtual Compra Compra
        {
            get
            {
                return this._Compra;
            }
            set
            {
                if (this._Compra != value)
                {
                    this.SendPropertyChanging("Compra");
                    this._Compra = value;
                    this.SendPropertyChanged("Compra");
                }
            }
        }

        #region Extensibility Method Definitions

        partial void OnCreated();

        #endregion

        public virtual event PropertyChangingEventHandler PropertyChanging;

        public virtual event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {
            var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

}
